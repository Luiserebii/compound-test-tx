{
  "contractName": "Fauceteer",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract EIP20NonStandardInterface",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "drip",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"contract EIP20NonStandardInterface\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"drip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Compound\",\"methods\":{\"drip(address)\":{\"details\":\"We send 0.01% of our tokens to the caller. Over time, the amount will tend toward and eventually reach zero.\",\"params\":{\"token\":\"The token to drip. Note: if we have no balance in this token, function will revert.\"}}},\"title\":\"Fauceteer\"},\"userdoc\":{\"methods\":{\"drip(address)\":{\"notice\":\"Drips some tokens to caller\"}},\"notice\":\"First computer program to be part of The Giving Pledge\"}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Fauceteer.sol\":\"Fauceteer\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/EIP20NonStandardInterface.sol\":{\"keccak256\":\"0x9719f12e4b80b51147ac195553a198cf8b0c516e7e4d04fc324a23ed15cbafb2\",\"urls\":[\"bzz-raw://50c3ba49b80106c88b0171390aa4127edc86f7b29607abe3dc6d08eaefebf837\",\"dweb:/ipfs/QmP6AHNmFdwYwWUeHnhYi3drCQy4dpnnqUbkMeU3oAtokj\"]},\"project:/contracts/Fauceteer.sol\":{\"keccak256\":\"0x05131e436aea99817fbfe1a205ed7259bac38c4c92bef3d51751f0872a94d428\",\"urls\":[\"bzz-raw://5bc9c34603cc75a59450ca1978ce3d6bb5d27b045e90740a9b1648f12d23af05\",\"dweb:/ipfs/QmaW3UeY8BwGPg4vazjwN2sXz87Ray9SQ9hKrsWfNXnddz\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610381806100206000396000f3fe608060405234801561001057600080fd5b5060043610610048576000357c01000000000000000000000000000000000000000000000000000000009004806367a5cd061461004d575b600080fd5b61008f6004803603602081101561006357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610091565b005b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561012c57600080fd5b505afa158015610140573d6000803e3d6000fd5b505050506040513d602081101561015657600080fd5b81019080805190602001909291905050509050600081116101df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f46617563657465657220697320656d707479000000000000000000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33612710848161020757fe5b046040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561028d57600080fd5b505af11580156102a1573d6000803e3d6000fd5b5050505060003d600081146102bd57602081146102c757600080fd5b60001991506102d3565b60206000803e60005191505b5080610347576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5472616e736665722072657475726e65642066616c73652e000000000000000081525060200191505060405180910390fd5b50505056fea265627a7a723158200cf65fb2d48e08efe398cea0b8fe905b6e56b239551ccd42a28526a6d7eaa59d64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610048576000357c01000000000000000000000000000000000000000000000000000000009004806367a5cd061461004d575b600080fd5b61008f6004803603602081101561006357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610091565b005b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561012c57600080fd5b505afa158015610140573d6000803e3d6000fd5b505050506040513d602081101561015657600080fd5b81019080805190602001909291905050509050600081116101df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f46617563657465657220697320656d707479000000000000000000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33612710848161020757fe5b046040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561028d57600080fd5b505af11580156102a1573d6000803e3d6000fd5b5050505060003d600081146102bd57602081146102c757600080fd5b60001991506102d3565b60206000803e60005191505b5080610347576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5472616e736665722072657475726e65642066616c73652e000000000000000081525060200191505060405180910390fd5b50505056fea265627a7a723158200cf65fb2d48e08efe398cea0b8fe905b6e56b239551ccd42a28526a6d7eaa59d64736f6c63430005100032",
  "sourceMap": "187:1245:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;187:1245:3;;;;;;;",
  "deployedSourceMap": "187:1245:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;187:1245:3;;;;;;;;;;;;;;;;;;;;501:929;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;501:929:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;565:12;580:5;:15;;;604:4;580:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;580:30:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;580:30:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;580:30:3;;;;;;;;;;;;;;;;565:45;;638:1;628:7;:11;620:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;672:5;:14;;;687:10;709:5;699:7;:15;;;;;;672:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;672:43:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;672:43:3;;;;735:12;787:16;825:1;820:151;;;;993:2;988:217;;;;1339:1;1336;1329:12;820:151;919:1;915:6;904:17;;820:151;;988:217;1090:2;1087:1;1084;1069:24;1131:1;1125:8;1114:19;;780:579;;1387:7;1379:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;501:929;;;:::o",
  "source": "pragma solidity ^0.5.16;\n\nimport \"./EIP20NonStandardInterface.sol\";\n\n/**\n  * @title Fauceteer\n  * @author Compound\n  * @notice First computer program to be part of The Giving Pledge\n  */\ncontract Fauceteer {\n\n    /**\n      * @notice Drips some tokens to caller\n      * @dev We send 0.01% of our tokens to the caller. Over time, the amount will tend toward and eventually reach zero.\n      * @param token The token to drip. Note: if we have no balance in this token, function will revert.\n      */\n    function drip(EIP20NonStandardInterface token) public {\n        uint balance = token.balanceOf(address(this));\n        require(balance > 0, \"Fauceteer is empty\");\n        token.transfer(msg.sender, balance / 10000); // 0.01%\n\n        bool success;\n        assembly {\n            switch returndatasize()\n                case 0 {                       // This is a non-standard ERC-20\n                    success := not(0)          // set success to true\n                }\n                case 32 {                      // This is a compliant ERC-20\n                    returndatacopy(0, 0, 32)\n                    success := mload(0)        // Set `success = returndata` of external call\n                }\n                default {                      // This is an excessively non-compliant ERC-20, revert.\n                    revert(0, 0)\n                }\n        }\n\n        require(success, \"Transfer returned false.\");\n    }\n}\n",
  "sourcePath": "/home/luiserebii/compound-test-tx/contracts/Fauceteer.sol",
  "ast": {
    "absolutePath": "project:/contracts/Fauceteer.sol",
    "exportedSymbols": {
      "Fauceteer": [
        786
      ]
    },
    "id": 787,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 743,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "project:/contracts/EIP20NonStandardInterface.sol",
        "file": "./EIP20NonStandardInterface.sol",
        "id": 744,
        "nodeType": "ImportDirective",
        "scope": 787,
        "sourceUnit": 742,
        "src": "26:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Fauceteer\n@author Compound\n@notice First computer program to be part of The Giving Pledge",
        "fullyImplemented": true,
        "id": 786,
        "linearizedBaseContracts": [
          786
        ],
        "name": "Fauceteer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 784,
              "nodeType": "Block",
              "src": "555:875:3",
              "statements": [
                {
                  "assignments": [
                    750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 750,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 784,
                      "src": "565:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 749,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "565:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 757,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 754,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 934,
                            "src": "604:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fauceteer_$786",
                              "typeString": "contract Fauceteer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Fauceteer_$786",
                              "typeString": "contract Fauceteer"
                            }
                          ],
                          "id": 753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "596:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "596:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "580:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$741",
                          "typeString": "contract EIP20NonStandardInterface"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 690,
                      "src": "580:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "565:45:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 759,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 750,
                          "src": "628:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "638:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "628:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46617563657465657220697320656d707479",
                        "id": 762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "641:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_947d2725b9bfd04a980a6996a7ba0e1104ba243e9f5b4df60682bb6b92c6a44c",
                          "typeString": "literal_string \"Fauceteer is empty\""
                        },
                        "value": "Fauceteer is empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_947d2725b9bfd04a980a6996a7ba0e1104ba243e9f5b4df60682bb6b92c6a44c",
                          "typeString": "literal_string \"Fauceteer is empty\""
                        }
                      ],
                      "id": 758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        903,
                        904
                      ],
                      "referencedDeclaration": 904,
                      "src": "620:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "620:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 764,
                  "nodeType": "ExpressionStatement",
                  "src": "620:42:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 768,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 900,
                          "src": "687:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "687:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 770,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 750,
                          "src": "699:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130303030",
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "709:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "699:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 765,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "672:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$741",
                          "typeString": "contract EIP20NonStandardInterface"
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 697,
                      "src": "672:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "672:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 774,
                  "nodeType": "ExpressionStatement",
                  "src": "672:43:3"
                },
                {
                  "assignments": [
                    776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 776,
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "scope": 784,
                      "src": "735:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 775,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "735:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 777,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "735:12:3"
                },
                {
                  "externalReferences": [
                    {
                      "success": {
                        "declaration": 776,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "904:7:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "success": {
                        "declaration": 776,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1114:7:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 778,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    switch returndatasize()\n    case 0 { success := not(0) }\n    case 32 {\n        returndatacopy(0, 0, 32)\n        success := mload(0)\n    }\n    default { revert(0, 0) }\n}",
                  "src": "757:612:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 780,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 776,
                        "src": "1387:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e736665722072657475726e65642066616c73652e",
                        "id": 781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1396:26:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c0fdf12224127e6c949ad6d4bfacf00fad05e383a363dfd8a4f46840be336f0",
                          "typeString": "literal_string \"Transfer returned false.\""
                        },
                        "value": "Transfer returned false."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c0fdf12224127e6c949ad6d4bfacf00fad05e383a363dfd8a4f46840be336f0",
                          "typeString": "literal_string \"Transfer returned false.\""
                        }
                      ],
                      "id": 779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        903,
                        904
                      ],
                      "referencedDeclaration": 904,
                      "src": "1379:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1379:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 783,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:44:3"
                }
              ]
            },
            "documentation": "@notice Drips some tokens to caller\n@dev We send 0.01% of our tokens to the caller. Over time, the amount will tend toward and eventually reach zero.\n@param token The token to drip. Note: if we have no balance in this token, function will revert.",
            "id": 785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drip",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "515:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$741",
                    "typeString": "contract EIP20NonStandardInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 745,
                    "name": "EIP20NonStandardInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 741,
                    "src": "515:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EIP20NonStandardInterface_$741",
                      "typeString": "contract EIP20NonStandardInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "514:33:3"
            },
            "returnParameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "555:0:3"
            },
            "scope": 786,
            "src": "501:929:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 787,
        "src": "187:1245:3"
      }
    ],
    "src": "0:1433:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Fauceteer.sol",
      "exportedSymbols": {
        "Fauceteer": [
          786
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".16"
          ]
        },
        "id": 743,
        "name": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "attributes": {
          "SourceUnit": 742,
          "absolutePath": "project:/contracts/EIP20NonStandardInterface.sol",
          "file": "./EIP20NonStandardInterface.sol",
          "scope": 787,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 744,
        "name": "ImportDirective",
        "src": "26:41:3"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": "@title Fauceteer\n@author Compound\n@notice First computer program to be part of The Giving Pledge",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            786
          ],
          "name": "Fauceteer",
          "scope": 787
        },
        "children": [
          {
            "attributes": {
              "documentation": "@notice Drips some tokens to caller\n@dev We send 0.01% of our tokens to the caller. Over time, the amount will tend toward and eventually reach zero.\n@param token The token to drip. Note: if we have no balance in this token, function will revert.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "drip",
              "scope": 786,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "token",
                      "scope": 785,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract EIP20NonStandardInterface",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "EIP20NonStandardInterface",
                          "referencedDeclaration": 741,
                          "type": "contract EIP20NonStandardInterface"
                        },
                        "id": 745,
                        "name": "UserDefinedTypeName",
                        "src": "515:25:3"
                      }
                    ],
                    "id": 746,
                    "name": "VariableDeclaration",
                    "src": "515:31:3"
                  }
                ],
                "id": 747,
                "name": "ParameterList",
                "src": "514:33:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 748,
                "name": "ParameterList",
                "src": "555:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        750
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "balance",
                          "scope": 784,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 749,
                            "name": "ElementaryTypeName",
                            "src": "565:4:3"
                          }
                        ],
                        "id": 750,
                        "name": "VariableDeclaration",
                        "src": "565:12:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 690,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 746,
                                  "type": "contract EIP20NonStandardInterface",
                                  "value": "token"
                                },
                                "id": 751,
                                "name": "Identifier",
                                "src": "580:5:3"
                              }
                            ],
                            "id": 752,
                            "name": "MemberAccess",
                            "src": "580:15:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Fauceteer_$786",
                                      "typeString": "contract Fauceteer"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 753,
                                "name": "ElementaryTypeNameExpression",
                                "src": "596:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 934,
                                  "type": "contract Fauceteer",
                                  "value": "this"
                                },
                                "id": 754,
                                "name": "Identifier",
                                "src": "604:4:3"
                              }
                            ],
                            "id": 755,
                            "name": "FunctionCall",
                            "src": "596:13:3"
                          }
                        ],
                        "id": 756,
                        "name": "FunctionCall",
                        "src": "580:30:3"
                      }
                    ],
                    "id": 757,
                    "name": "VariableDeclarationStatement",
                    "src": "565:45:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_947d2725b9bfd04a980a6996a7ba0e1104ba243e9f5b4df60682bb6b92c6a44c",
                                  "typeString": "literal_string \"Fauceteer is empty\""
                                }
                              ],
                              "overloadedDeclarations": [
                                903,
                                904
                              ],
                              "referencedDeclaration": 904,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 758,
                            "name": "Identifier",
                            "src": "620:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 750,
                                  "type": "uint256",
                                  "value": "balance"
                                },
                                "id": 759,
                                "name": "Identifier",
                                "src": "628:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 760,
                                "name": "Literal",
                                "src": "638:1:3"
                              }
                            ],
                            "id": 761,
                            "name": "BinaryOperation",
                            "src": "628:11:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "46617563657465657220697320656d707479",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Fauceteer is empty\"",
                              "value": "Fauceteer is empty"
                            },
                            "id": 762,
                            "name": "Literal",
                            "src": "641:20:3"
                          }
                        ],
                        "id": 763,
                        "name": "FunctionCall",
                        "src": "620:42:3"
                      }
                    ],
                    "id": 764,
                    "name": "ExpressionStatement",
                    "src": "620:42:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "referencedDeclaration": 697,
                              "type": "function (address,uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 746,
                                  "type": "contract EIP20NonStandardInterface",
                                  "value": "token"
                                },
                                "id": 765,
                                "name": "Identifier",
                                "src": "672:5:3"
                              }
                            ],
                            "id": 767,
                            "name": "MemberAccess",
                            "src": "672:14:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 900,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 768,
                                "name": "Identifier",
                                "src": "687:3:3"
                              }
                            ],
                            "id": 769,
                            "name": "MemberAccess",
                            "src": "687:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "/",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 750,
                                  "type": "uint256",
                                  "value": "balance"
                                },
                                "id": 770,
                                "name": "Identifier",
                                "src": "699:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3130303030",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 10000",
                                  "value": "10000"
                                },
                                "id": 771,
                                "name": "Literal",
                                "src": "709:5:3"
                              }
                            ],
                            "id": 772,
                            "name": "BinaryOperation",
                            "src": "699:15:3"
                          }
                        ],
                        "id": 773,
                        "name": "FunctionCall",
                        "src": "672:43:3"
                      }
                    ],
                    "id": 774,
                    "name": "ExpressionStatement",
                    "src": "672:43:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        776
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "success",
                          "scope": 784,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 775,
                            "name": "ElementaryTypeName",
                            "src": "735:4:3"
                          }
                        ],
                        "id": 776,
                        "name": "VariableDeclaration",
                        "src": "735:12:3"
                      }
                    ],
                    "id": 777,
                    "name": "VariableDeclarationStatement",
                    "src": "735:12:3"
                  },
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "success": {
                            "declaration": 776,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "904:7:3",
                            "valueSize": 1
                          }
                        },
                        {
                          "success": {
                            "declaration": 776,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1114:7:3",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    switch returndatasize()\n    case 0 { success := not(0) }\n    case 32 {\n        returndatacopy(0, 0, 32)\n        success := mload(0)\n    }\n    default { revert(0, 0) }\n}"
                    },
                    "children": [],
                    "id": 778,
                    "name": "InlineAssembly",
                    "src": "757:612:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3c0fdf12224127e6c949ad6d4bfacf00fad05e383a363dfd8a4f46840be336f0",
                                  "typeString": "literal_string \"Transfer returned false.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                903,
                                904
                              ],
                              "referencedDeclaration": 904,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 779,
                            "name": "Identifier",
                            "src": "1379:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 776,
                              "type": "bool",
                              "value": "success"
                            },
                            "id": 780,
                            "name": "Identifier",
                            "src": "1387:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "5472616e736665722072657475726e65642066616c73652e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Transfer returned false.\"",
                              "value": "Transfer returned false."
                            },
                            "id": 781,
                            "name": "Literal",
                            "src": "1396:26:3"
                          }
                        ],
                        "id": 782,
                        "name": "FunctionCall",
                        "src": "1379:44:3"
                      }
                    ],
                    "id": 783,
                    "name": "ExpressionStatement",
                    "src": "1379:44:3"
                  }
                ],
                "id": 784,
                "name": "Block",
                "src": "555:875:3"
              }
            ],
            "id": 785,
            "name": "FunctionDefinition",
            "src": "501:929:3"
          }
        ],
        "id": 786,
        "name": "ContractDefinition",
        "src": "187:1245:3"
      }
    ],
    "id": 787,
    "name": "SourceUnit",
    "src": "0:1433:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-13T03:21:18.287Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Compound",
    "methods": {
      "drip(address)": {
        "details": "We send 0.01% of our tokens to the caller. Over time, the amount will tend toward and eventually reach zero.",
        "params": {
          "token": "The token to drip. Note: if we have no balance in this token, function will revert."
        }
      }
    },
    "title": "Fauceteer"
  },
  "userdoc": {
    "methods": {
      "drip(address)": {
        "notice": "Drips some tokens to caller"
      }
    },
    "notice": "First computer program to be part of The Giving Pledge"
  }
}